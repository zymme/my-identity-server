IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;

GO

CREATE TABLE [ServiceProviders] (
    [Id] int NOT NULL IDENTITY,
    [EntityId] nvarchar(200) NOT NULL,
    [EncryptionCertificate] varbinary(max) NULL,
    [EncryptAssertions] bit NOT NULL,
    [RequireSamlRequestDestination] bit NOT NULL,
    CONSTRAINT [PK_ServiceProviders] PRIMARY KEY ([Id])
);

GO

CREATE TABLE [ServiceProviderAssertionConsumerServices] (
    [Id] int NOT NULL IDENTITY,
    [Index] int NOT NULL,
    [IsDefault] bit NOT NULL,
    [ServiceProviderId] int NOT NULL,
    [Binding] nvarchar(2000) NOT NULL,
    [Location] nvarchar(2000) NOT NULL,
    CONSTRAINT [PK_ServiceProviderAssertionConsumerServices] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_ServiceProviderAssertionConsumerServices_ServiceProviders_ServiceProviderId] FOREIGN KEY ([ServiceProviderId]) REFERENCES [ServiceProviders] ([Id]) ON DELETE CASCADE
);

GO

CREATE TABLE [ServiceProviderClaimMappings] (
    [Id] int NOT NULL IDENTITY,
    [OriginalClaimType] nvarchar(250) NOT NULL,
    [NewClaimType] nvarchar(250) NOT NULL,
    [ServiceProviderId] int NOT NULL,
    CONSTRAINT [PK_ServiceProviderClaimMappings] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_ServiceProviderClaimMappings_ServiceProviders_ServiceProviderId] FOREIGN KEY ([ServiceProviderId]) REFERENCES [ServiceProviders] ([Id]) ON DELETE CASCADE
);

GO

CREATE TABLE [ServiceProviderSignCertificates] (
    [Id] int NOT NULL IDENTITY,
    [Certificate] varbinary(max) NOT NULL,
    [ServiceProviderId] int NOT NULL,
    CONSTRAINT [PK_ServiceProviderSignCertificates] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_ServiceProviderSignCertificates_ServiceProviders_ServiceProviderId] FOREIGN KEY ([ServiceProviderId]) REFERENCES [ServiceProviders] ([Id]) ON DELETE CASCADE
);

GO

CREATE TABLE [ServiceProviderSingleLogoutServices] (
    [Id] int NOT NULL IDENTITY,
    [Index] int NOT NULL,
    [IsDefault] bit NOT NULL,
    [ServiceProviderId] int NOT NULL,
    [Binding] nvarchar(2000) NOT NULL,
    [Location] nvarchar(2000) NOT NULL,
    CONSTRAINT [PK_ServiceProviderSingleLogoutServices] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_ServiceProviderSingleLogoutServices_ServiceProviders_ServiceProviderId] FOREIGN KEY ([ServiceProviderId]) REFERENCES [ServiceProviders] ([Id]) ON DELETE CASCADE
);

GO

CREATE INDEX [IX_ServiceProviderAssertionConsumerServices_ServiceProviderId] ON [ServiceProviderAssertionConsumerServices] ([ServiceProviderId]);

GO

CREATE INDEX [IX_ServiceProviderClaimMappings_ServiceProviderId] ON [ServiceProviderClaimMappings] ([ServiceProviderId]);

GO

CREATE UNIQUE INDEX [IX_ServiceProviders_EntityId] ON [ServiceProviders] ([EntityId]);

GO

CREATE INDEX [IX_ServiceProviderSignCertificates_ServiceProviderId] ON [ServiceProviderSignCertificates] ([ServiceProviderId]);

GO

CREATE INDEX [IX_ServiceProviderSingleLogoutServices_ServiceProviderId] ON [ServiceProviderSingleLogoutServices] ([ServiceProviderId]);

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20180914203537_serviceproviderDbMigration', N'2.1.1-rtm-30846');

GO



 var idClientOptions = new IdentityClientOptions
  {
      LocationUrl = WebConfigurationManager.AppSettings["IdentityServerLocation"],
      ClientId = WebConfigurationManager.AppSettings["IdentityServerClientId"],
      ClientSecret = WebConfigurationManager.AppSettings["IdentityServerSecret"],
      ResourceId = WebConfigurationManager.AppSettings["IdentityServerResourceId"],
      ResourceSecret = WebConfigurationManager.AppSettings["IdentityServerResourceSecret"],
  };
